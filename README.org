* ATAC modules
scmodule code [[https://github.com/KellisLab/scmodule][adapted]] for ATAC-seq, multiomics, and peak-gene linking

** parameters and workflow
Make sure your data is in an AnnData (H5AD) format with
1. PCA ([[https://scanpy.readthedocs.io/en/stable/generated/scanpy.pp.pca.html][scanpy.pp.pca]]), preferably on top of logTF-logIDF ([[https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html][sklearn.feature_extraction.text.TfidfTransformer(sublinear_tf=True)]])
2. QC ([[https://scanpy.readthedocs.io/en/stable/generated/scanpy.pp.calculate_qc_metrics.html][scanpy.pp.calculate_qc_metrics]])

so that the modules can be calculated without loading the data matrix into memory.
** workflow
*** calculate rep
am.extract_reduction(adata, power=0, key_added="X_zca", margin="log1p_total_counts", covariates=[])
*** calculate splines
am.calculate_splines(adata, use_rep="X_zca", margin="n_cells_by_counts")
*** add margin to rep
adata.obsm["X_margin_zca"] = np.hstack((adata.obs["n_cells_by_counts"], adata.obsm["X_zca"]))
*** calculate neighbors
sc.pp.neighbors(adata, metric=am.distance, use_rep="X_margin_zca", metric_kwargs=adata.uns["scmod"]["splines"], n_neighbors=100, key_added="mod")
*** plot
sc.tl.draw_graph(adata, obsp="mod", layout="fr", key_added_ext="mod")

** to install
You may need to create a CONDA environment as specified in [[atac_module.yml]].

After dependencies are met, this sequence of commands puts the script [[scripts/atac_module.py][atac_module.py]] in pip's bin path, as well as installs the library.
#+BEGIN_SRC bash
git clone git@github.com:KellisLab/atac_module.git
cd atac_module
python3 setup.py build
pip install .
#+END_SRC
* Wishlist
** Handling repeated values in spline bins
** Asymmetric splines for linking (or BBKNN??)
** Cached numba function
** Integrated linking
